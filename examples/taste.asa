PROGRAM PlayAndSaveVideo {
    Handlers {
        ffmpeg from 'libffmpeg-handler';
        string_stream from 'libstring-stream-handler';
    }
    Sources {
        video from 'data/test.ogv';
        taste from 'data/taste.txt';
    }
    Elements {
	    img = 0;
        taste_value = '';

        offset = 0;

        icon_sweet = 0;
        icon_sour = 0;
        icon_salty = 0;
        icon_bitter = 0;
        icon_umami = 0;

        bar_width = 20;
    }
    Actions {
        icon_sweet = load_image('data/sweet.png');
        icon_sour = load_image('data/sour.png');
        icon_salty = load_image('data/salty.png');
        icon_bitter = load_image('data/bitter.png');
        icon_umami = load_image('data/umami.png');

        Timeline from 0 to 20 [
            Download img from video with ffmpeg;
            Download taste_value from taste with string_stream;
        ] {
            offset = 0;
            if (string_contains(taste_value, 'sweet')) {
                overlay_image(img, icon_sweet, tuple(0, offset));
                offset = offset + height(icon_sweet);
            }
            if (string_contains(taste_value, 'sour')) {
                overlay_image(img, icon_sour, tuple(0, offset));
                offset = offset + height(icon_sour);
            }
            if (string_contains(taste_value, 'salty')) {
                overlay_image(img, icon_salty, tuple(0, offset));
                offset = offset + height(icon_salty);
            }
            if (string_contains(taste_value, 'bitter')) {
                overlay_image(img, icon_bitter, tuple(0, offset));
                offset = offset + height(icon_bitter);
            }
            if (string_contains(taste_value, 'umami')) {
                overlay_image(img, icon_umami, tuple(0, offset));
                offset = offset + height(icon_umami);
            }

            show_image(img);
        }
    }
}
