prog = {top_decl};

var_or_func_decl = var_decl_st | func_decl | import_st;

var_decl_st = "let", id, ["=", expr], ";";

arr = "[", [arg_list], "]";
arg_list = expr, [",", arg_list];

func_decl = "fn", id, "(", [param_list], ")", block_st;
param_list = id, [",", param_list];

block_st = "{", {st}, "}";

st = expr_st
   | block_st
   | var_decl_st
   | select_st
   | iter_st
   | match_st
   | timeline_st
   | download_st
   | updload_st
   | import_st
   | jump_st;

expr_st = [expr], ";";
block_st = "{", {st}, "}";
select_st = "if", "(", expr, ")", st, ["else", st];
iter_st = "while", "(", expr, ")", st;

match_st = "match", "(", expr, ")", "{", {case}, [def_case], "}";
case = match_list, "->", st;
match_list = expr, ["|", match_list];
def_case = "def", "->", st;

timeline_st = "timeline", tl_arr, func;
tl_arr = id | "{", [arg_list], "}";

obj = id | obj_decl;
obj_decl = "{", [fld_list], "}";
fld_list = field, [',', fld_list];
field = expr, ":", expr;

func = id | lambda;
lambda = "|", [param_list], "|", block_st;

download_st = "download", expr, "from", expr, "with", expr;
updload_st = "upload", expr, "to", expr, "with", expr;

jump_st = ("continue" | "break" | return), ";";
continue = "continue";
break = "break";
return = "return", [expr];

import_st = "import", ["handler"], id, "from", string;

expr = assign;

assign = ternary, assign_ap;
assign_ap = assign_op, ternary, assign_ap | none;
assign_op = "=" | "+=" | "-=" | "*=" | "/=" | "%=" | "<<=" | ">>=" | "&=" | "|=" | "^=";

ternary = log_or | log_or "?" expr ":" expr;

log_or = log_and, log_or_ap;
log_or_ap = "||", log_and, log_or_ap | none;

log_and = incl_or, log_and_ap;
log_and_ap = "&&", incl_or, log_and_ap | none;

incl_or = excl_or, incl_or_ap;
incl_or_ap = "|", excl_or, incl_or_ap | none;

excl_or = and, excl_or_ap;
excl_or_ap = "^", and, excl_or_ap | none;

and = eq, and_ap;
and_ap = "&", eq, and_ap | none;

eq = rel, eq_ap;
eq_ap = ("==" | "!="), rel, eq_ap | none;

rel = shift, rel_ap;
rel_ap = ("<" | "<=" | ">" | ">="), shift, rel_ap | none;

shift = add, shift_ap;
shift_ap = ("<<" | ">>"), add, shift_ap | none;

add = mult, add_ap;
add_ap = ("+" | "-"), mult, add_ap | none;

mult = unary, mult_ap;
mult_ap = ("*" | "/" | "%"), unary, mult_ap | none;

unary = postfix | ("+" | "-" | "!" | "~" | "++" | "--"), postfix;

postfix = primary, postfix_ap;
postfix_ap = ("--" | "++" | ".", id), postfix_ap | none;

primary = number
   | string
   | bool
   | var_or_call
   | parentheses
   | obj_decl
   | lambda
   | arr;

var_or_call = id, [fn_call];
parentheses = "(", expr, ")";
fn_call = "(", [arg_list], ")";